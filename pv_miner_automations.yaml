# ‚òÄÔ∏è PV Miner Automation Examples
# Smart Solar Bitcoin Mining Automations for Home Assistant
# Copy these to your automations.yaml or create via UI

# 1. Solar Power Based Mining Control
automation:
  - id: solar_mining_high_power
    alias: "‚òÄÔ∏è Solar Mining - High Power Mode"
    description: "Switch to high power mining when solar production is high"
    trigger:
      - platform: numeric_state
        entity_id: sensor.solar_power_production  # Replace with your solar sensor
        above: 6000  # Watts - adjust based on your setup
        for:
          minutes: 5
    condition:
      - condition: state
        entity_id: switch.antminer_s21_miner
        state: "on"
    action:
      - service: pv_miner.set_power_profile
        data:
          profile: "810MHz"  # High power profile
        target:
          entity_id: switch.antminer_s21_miner
      - service: notify.mobile_app_your_phone  # Optional notification
        data:
          message: "üî• Miner switched to HIGH POWER (810MHz) - Solar: {{ states('sensor.solar_power_production') }}W"

  - id: solar_mining_medium_power
    alias: "‚öñÔ∏è Solar Mining - Medium Power Mode"
    description: "Switch to medium power when solar is moderate"
    trigger:
      - platform: numeric_state
        entity_id: sensor.solar_power_production
        above: 4000
        below: 6000
        for:
          minutes: 5
    condition:
      - condition: state
        entity_id: switch.antminer_s21_miner
        state: "on"
    action:
      - service: pv_miner.set_power_profile
        data:
          profile: "default"  # Standard 710MHz profile
        target:
          entity_id: switch.antminer_s21_miner
      - service: notify.mobile_app_your_phone
        data:
          message: "‚öñÔ∏è Miner switched to BALANCED (default) - Solar: {{ states('sensor.solar_power_production') }}W"

  - id: solar_mining_low_power
    alias: "üå± Solar Mining - Eco Mode"
    description: "Switch to eco mode when solar production is low"
    trigger:
      - platform: numeric_state
        entity_id: sensor.solar_power_production
        above: 2000
        below: 4000
        for:
          minutes: 5
    condition:
      - condition: state
        entity_id: switch.antminer_s21_miner
        state: "on"
    action:
      - service: pv_miner.set_power_profile
        data:
          profile: "435MHz"  # Lower power profile
        target:
          entity_id: switch.antminer_s21_miner
      - service: notify.mobile_app_your_phone
        data:
          message: "üå± Miner switched to ECO MODE (435MHz) - Solar: {{ states('sensor.solar_power_production') }}W"

  - id: solar_mining_sleep_mode
    alias: "üò¥ Solar Mining - Sleep Mode"
    description: "Put miner to sleep when solar is very low"
    trigger:
      - platform: numeric_state
        entity_id: sensor.solar_power_production
        below: 2000
        for:
          minutes: 10
    action:
      - service: pv_miner.sleep_miner
        target:
          entity_id: switch.antminer_s21_miner
      - service: notify.mobile_app_your_phone
        data:
          message: "üò¥ Miner put to SLEEP - Solar too low: {{ states('sensor.solar_power_production') }}W"

  - id: solar_mining_wake_up
    alias: "‚è∞ Solar Mining - Wake Up"
    description: "Wake up miner when solar production returns"
    trigger:
      - platform: numeric_state
        entity_id: sensor.solar_power_production
        above: 2500
        for:
          minutes: 5
    condition:
      - condition: state
        entity_id: switch.antminer_s21_miner
        state: "off"
    action:
      - service: pv_miner.wake_miner
        target:
          entity_id: switch.antminer_s21_miner
      - delay: "00:00:30"  # Wait for miner to wake up
      - service: pv_miner.set_power_profile
        data:
          profile: "310MHz"  # Start with eco profile
        target:
          entity_id: switch.antminer_s21_miner
      - service: notify.mobile_app_your_phone
        data:
          message: "‚è∞ Miner WOKEN UP and started in ECO mode - Solar: {{ states('sensor.solar_power_production') }}W"

# 2. Battery Protection Automations
  - id: battery_protection_low
    alias: "üîã Battery Protection - Low SOC"
    description: "Reduce mining power when battery is low"
    trigger:
      - platform: numeric_state
        entity_id: sensor.battery_soc  # Replace with your battery sensor
        below: 30
        for:
          minutes: 5
    action:
      - service: pv_miner.set_power_profile
        data:
          profile: "310MHz"  # Minimum power profile
        target:
          entity_id: switch.antminer_s21_miner
      - service: notify.mobile_app_your_phone
        data:
          message: "üîã BATTERY LOW ({{ states('sensor.battery_soc') }}%) - Miner switched to minimum power"

  - id: battery_protection_critical
    alias: "üö® Battery Protection - Critical SOC"
    description: "Emergency stop mining when battery is critically low"
    trigger:
      - platform: numeric_state
        entity_id: sensor.battery_soc
        below: 20
        for:
          minutes: 2
    action:
      - service: pv_miner.sleep_miner
        target:
          entity_id: switch.antminer_s21_miner
      - service: notify.mobile_app_your_phone
        data:
          message: "üö® CRITICAL BATTERY ({{ states('sensor.battery_soc') }}%) - Miner EMERGENCY SLEEP!"
          title: "‚ö° PV Miner Emergency"

# 3. Temperature Protection
  - id: temperature_protection
    alias: "üå°Ô∏è Temperature Protection"
    description: "Reduce power when miner gets too hot"
    trigger:
      - platform: numeric_state
        entity_id: sensor.antminer_s21_temperature
        above: 75  # Celsius - adjust based on your comfort level
        for:
          minutes: 2
    action:
      - service: pv_miner.set_power_profile
        data:
          profile: "435MHz"  # Reduce to medium-low power
        target:
          entity_id: switch.antminer_s21_miner
      - service: notify.mobile_app_your_phone
        data:
          message: "üå°Ô∏è HIGH TEMPERATURE ({{ states('sensor.antminer_s21_temperature') }}¬∞C) - Reduced to 435MHz profile"

  - id: temperature_emergency
    alias: "üî• Temperature Emergency"
    description: "Emergency stop if temperature is dangerous"
    trigger:
      - platform: numeric_state
        entity_id: sensor.antminer_s21_temperature
        above: 85  # Emergency temperature
        for:
          minutes: 1
    action:
      - service: pv_miner.emergency_stop
        target:
          entity_id: switch.antminer_s21_miner
      - service: notify.mobile_app_your_phone
        data:
          message: "üî• EMERGENCY TEMPERATURE ({{ states('sensor.antminer_s21_temperature') }}¬∞C) - MINER STOPPED!"
          title: "üö® Miner Emergency"

# 4. Time-Based Automations
  - id: night_mode_schedule
    alias: "üåô Night Mode Schedule"
    description: "Switch to quiet night mode after sunset"
    trigger:
      - platform: sun
        event: sunset
        offset: "+01:00:00"  # 1 hour after sunset
    condition:
      - condition: state
        entity_id: switch.antminer_s21_miner
        state: "on"
    action:
      - service: pv_miner.set_power_profile
        data:
          profile: "310MHz"  # Quiet, low power
        target:
          entity_id: switch.antminer_s21_miner
      - service: notify.mobile_app_your_phone
        data:
          message: "üåô Night mode activated - Miner switched to quiet 310MHz profile"

  - id: morning_wake_up
    alias: "üåÖ Morning Wake Up"
    description: "Prepare for solar mining after sunrise"
    trigger:
      - platform: sun
        event: sunrise
        offset: "-00:30:00"  # 30 minutes before sunrise
    action:
      - service: pv_miner.wake_miner
        target:
          entity_id: switch.antminer_s21_miner
      - delay: "00:00:30"
      - service: pv_miner.set_power_profile
        data:
          profile: "435MHz"  # Start with medium-low power
        target:
          entity_id: switch.antminer_s21_miner
      - service: notify.mobile_app_your_phone
        data:
          message: "üåÖ Good morning! Miner ready for solar mining at 435MHz"

# 5. Hashboard Individual Control
  - id: hashboard_temperature_control
    alias: "üî• Individual Hashboard Temperature Control"
    description: "Disable hot hashboards individually"
    trigger:
      - platform: numeric_state
        entity_id: sensor.antminer_s21_hashboard_0_temperature
        above: 80
        for:
          minutes: 3
      - platform: numeric_state
        entity_id: sensor.antminer_s21_hashboard_1_temperature
        above: 80
        for:
          minutes: 3
      - platform: numeric_state
        entity_id: sensor.antminer_s21_hashboard_2_temperature
        above: 80
        for:
          minutes: 3
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.antminer_s21_hashboard_0_temperature
                above: 80
            sequence:
              - service: switch.turn_off
                target:
                  entity_id: switch.antminer_s21_hashboard_0
              - service: notify.mobile_app_your_phone
                data:
                  message: "üî• Hashboard 0 disabled due to high temperature ({{ states('sensor.antminer_s21_hashboard_0_temperature') }}¬∞C)"
          - conditions:
              - condition: numeric_state
                entity_id: sensor.antminer_s21_hashboard_1_temperature
                above: 80
            sequence:
              - service: switch.turn_off
                target:
                  entity_id: switch.antminer_s21_hashboard_1
              - service: notify.mobile_app_your_phone
                data:
                  message: "üî• Hashboard 1 disabled due to high temperature ({{ states('sensor.antminer_s21_hashboard_1_temperature') }}¬∞C)"
          - conditions:
              - condition: numeric_state
                entity_id: sensor.antminer_s21_hashboard_2_temperature
                above: 80
            sequence:
              - service: switch.turn_off
                target:
                  entity_id: switch.antminer_s21_hashboard_2
              - service: notify.mobile_app_your_phone
                data:
                  message: "üî• Hashboard 2 disabled due to high temperature ({{ states('sensor.antminer_s21_hashboard_2_temperature') }}¬∞C)"

# 6. Efficiency Optimization
  - id: efficiency_optimization
    alias: "üìä Efficiency Optimization"
    description: "Automatically optimize for best efficiency during good solar conditions"
    trigger:
      - platform: time_pattern
        minutes: "/30"  # Check every 30 minutes
    condition:
      - condition: numeric_state
        entity_id: sensor.solar_power_production
        above: 5000  # Only when solar is good
      - condition: state
        entity_id: switch.antminer_s21_miner
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.antminer_s21_efficiency
                above: 25  # J/TH - if efficiency is poor
            sequence:
              - service: pv_miner.set_power_profile
                data:
                  profile: "560MHz"  # More efficient profile
                target:
                  entity_id: switch.antminer_s21_miner
              - service: notify.mobile_app_your_phone
                data:
                  message: "üìä Efficiency optimization: switched to 560MHz profile"

# 7. Performance Monitoring Alert
  - id: performance_alert
    alias: "‚ö†Ô∏è Performance Alert"
    description: "Alert when hashrate drops significantly"
    trigger:
      - platform: numeric_state
        entity_id: sensor.antminer_s21_hashrate
        below: 100  # TH/s - adjust based on expected performance
        for:
          minutes: 10
    condition:
      - condition: state
        entity_id: switch.antminer_s21_miner
        state: "on"
    action:
      - service: notify.mobile_app_your_phone
        data:
          message: "‚ö†Ô∏è LOW HASHRATE ALERT: Only {{ states('sensor.antminer_s21_hashrate') }} TH/s for 10 minutes"
          title: "üîß Miner Performance Issue"